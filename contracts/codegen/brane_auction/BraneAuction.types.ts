/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

import { Coin } from '@cosmjs/stargate'

export type Addr = string;
export interface Auction {
  auction_end_time: number;
  bids: Bid[];
  highest_bid: Bid;
  submission_info: SubmissionItem;
}
export interface Bid {
  amount: number;
  bidder: Addr;
}
export interface SubmissionItem {
  curators: Addr[];
  submission: SubmissionInfo;
  submission_end_time: number;
  votes: number;
}
export interface SubmissionInfo {
  proceed_recipient: Addr;
  submitter: Addr;
  token_uri: string;
}
export type Uint128 = string;
export interface BidAssetAuction {
  auctioned_asset: Coin;
  highest_bid: Bid;
}
export type Decimal = string;
export interface Config {
  auction_period: number;
  bid_denom: string;
  curation_threshold: Decimal;
  current_submission_id: number;
  free_vote_addr: Addr;
  incentive_bid_percent: Decimal;
  incentive_denom?: string | null;
  minimum_outbid: Decimal;
  mint_cost: number;
  minter_addr: string;
  owner: Addr;
  sg721_addr: string;
  submission_cost: number;
  submission_limit: number;
  submission_total: number;
  submission_vote_period: number;
}
export type ExecuteMsg = {
  submit_nft: {
    proceed_recipient: string;
    token_uri: string;
  };
} | {
  vote_to_curate: {
    submission_ids: number[];
  };
} | {
  bid_for_nft: {};
} | {
  bid_for_assets: {};
} | {
  conclude_auction: {};
} | {
  update_config: {
    auction_period?: number | null;
    bid_denom?: string | null;
    curation_threshold?: Decimal | null;
    free_vote_addr?: string | null;
    incentive_bid_percent?: Decimal | null;
    incentive_denom?: string | null;
    minimum_outbid?: Decimal | null;
    mint_cost?: number | null;
    owner?: string | null;
    submission_cost?: number | null;
    submission_limit?: number | null;
    submission_vote_period?: number | null;
  };
};
export type Timestamp = Uint64;
export type Uint64 = string;
export interface InstantiateMsg {
  base_factory_address: string;
  bid_denom: string;
  collection_params?: CollectionParams | null;
  first_submission: SubmissionInfo;
  free_vote_addr: string;
  incentive_denom?: string | null;
  mint_cost: number;
  minter_addr?: string | null;
  sg721_addr?: string | null;
  sg721_code_id?: number | null;
}
export interface CollectionParams {
  code_id: number;
  info: CollectionInfoForRoyaltyInfoResponse;
  name: string;
  symbol: string;
}
export interface CollectionInfoForRoyaltyInfoResponse {
  creator: string;
  description: string;
  explicit_content?: boolean | null;
  external_link?: string | null;
  image: string;
  royalty_info?: RoyaltyInfoResponse | null;
  start_trading_time?: Timestamp | null;
}
export interface RoyaltyInfoResponse {
  payment_address: string;
  share: Decimal;
}
export interface PendingAuctionResponse {
  pending_auctions: Auction[];
}
export type QueryMsg = {
  config: {};
} | {
  submissions: {
    limit?: number | null;
    start_after?: number | null;
    submission_id?: number | null;
  };
} | {
  pending_auctions: {
    limit?: number | null;
    start_after?: number | null;
  };
} | {
  live_nft_auction: {};
} | {
  live_bid_asset_auction: {};
};
export interface SubmissionsResponse {
  submissions: SubmissionItem[];
}
export interface Votes {
  no: number;
  yes: number;
}