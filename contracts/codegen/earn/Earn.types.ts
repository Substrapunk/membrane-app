/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Decimal = string;
export interface APRResponse {
  cost: Decimal;
  leverage: Decimal;
  month_apr?: Decimal | null;
  three_month_apr?: Decimal | null;
  week_apr?: Decimal | null;
  year_apr?: Decimal | null;
}

interface VTCheckpoint {
  vt_claim_of_checkpoint: string;
  time_since_last_checkpoint: number;
}

export interface ClaimTracker {
  vt_claim_checkpoints: VTCheckpoint[];
  last_updated: number;
}
export interface APR {
  apr: string;
  negative: boolean;
}
export type Addr = string;
export type Uint128 = string;
export interface Config {
  cdp_contract_addr: Addr;
  cdp_position_id: Uint128;
  cdt_denom: string;
  deposit_cap: Uint128;
  deposit_token: VaultInfo;
  oracle_contract_addr: Addr;
  osmosis_proxy_contract_addr: Addr;
  owner: Addr;
  swap_slippage: Decimal;
  total_nonleveraged_vault_tokens: Uint128;
  vault_cost_index: number;
  vault_token: string;
  withdrawal_buffer: Decimal;
}
export interface VaultInfo {
  deposit_token: string;
  vault_addr: Addr;
  vault_token: string;
}
export type ExecuteMsg = {
  enter_vault: {};
} | {
  exit_vault: {};
} | {
  unloop_c_d_p: {
    desired_collateral_withdrawal: Uint128;
  };
} | {
  loop_c_d_p: {};
} | {
  rate_assurance: {
    exit: boolean;
  };
} | {
  update_nonleveraged_vault_tokens: {};
};
export interface InstantiateMsg {
  cdp_contract_addr: string;
  cdt_denom: string;
  deposit_token: VaultInfo;
  oracle_contract_addr: string;
  osmosis_proxy_contract_addr: string;
  vault_subdenom: string;
}
export type QueryMsg = {
  config: {};
} | {
  vault_token_underlying: {
    vault_token_amount: Uint128;
  };
} | {
  a_p_r: {};
};